name: Release

on:
  push:
    tags:
      - '*.*.*'

jobs:
  release:
    name: Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Get the version
        id: Vars
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: "3.9"
      - name: Install poetry
        uses: snok/install-poetry@v1
      - name: Export requirements
        run: poetry export -f requirements.txt --output requirements.txt
      - name: Download python 3.8.10
        run:  wget https://www.python.org/ftp/python/3.8.10/python-3.8.10-embed-amd64.zip
      - name: Unzip python
        run: |
          unzip python-3.8.10-embed-amd64.zip -d python-3.8.10
          rm -rf python-3.8.10-embed-amd64.zip
      - name: Download pip
        run: wget https://bootstrap.pypa.io/get-pip.py -P python-3.8.10
      - name: Configurate pip
        run: echo import site >> python-3.8.10/python38._pth
      - name: Create install batch file
        run: |
          printf "%s\n" "@echo off" "python-3.8.10\python.exe python-3.8.10\get-pip.py" "python-3.8.10\Scripts\pip.exe install -r requirements.txt" "pause" > install.bat
      - name: Create run batch file
        run: |
          mkdir bin
          printf "%s\n" "@echo off" "python-3.8.10\python.exe controller.py" > bin/run.bat
      - name: Create run vbs script
        run: |
          printf '%s\n' 'Set objShell = WScript.CreateObject("WScript.Shell")' 'objShell.Run("bin\run.bat"), 0, True' > run.vbs
      - name: Create ZIP archive
        run: |
          mkdir dist
          zip -r dist/autocad-polystyrene-calculatio-x64-v.${{ steps.vars.outputs.tag }}.zip ./ -x *.git* mypy.ini poetry.lock .editorconfig dist
      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "dist/*"
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: false
